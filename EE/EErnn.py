# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1f3VLOofrT01auF8BueH0CXWB69rRsF8X
"""

import tensorflow as tf
from tensorflow.keras import layers, models
import pandas
import numpy as np
from sklearn.model_selection import train_test_split
import pymongo

client = pymongo.MongoClient('mongodb+srv://aditymakkar000:g69jDrsOgDz7tMKX@eedata.l1ghxko.mongodb.net/')
db = client['cluster0']
collection = db[('SIMPLE_RNN_1layer')]


mapping = {'a': [1,0,0,0,0,0,0,0,0],
        'b': [0,1,0,0,0,0,0,0,0],
        'c': [0,0,1,0,0,0,0,0,0],
        'd': [0,0,0,1,0,0,0,0,0],
        'e': [0,0,0,0,1,0,0,0,0],
        'f': [0,0,0,0,0,1,0,0,0],
        'g': [0,0,0,0,0,0,1,0,0],
        'h': [0,0,0,0,0,0,0,1,0],
        'i': [0,0,0,0,0,0,0,0,1]}

data = pandas.read_csv('./EEdata.csv')

words = data['word']
y = data['word']


x = data.iloc[:,2:]

data.iloc[:,2:]

y = np.concatenate([[mapping[i] for i in y]])

x = x.to_numpy()
x = x[:,:45].reshape(900,5,9)


x = x.transpose(0, 2, 1)
x = np.nan_to_num(x)

print(x.shape)


encoder = models.Sequential([
    layers.SimpleRNN(64,activation='tanh'),
    layers.Dense(64, activation='tanh', input_shape=(64,)),
    layers.Dense(9, activation='softmax')
])
encoder.summary()

autoencoder = models.Sequential([
    encoder
])
autoencoder.summary()
autoencoder.compile(optimizer='adam', loss='categorical_crossentropy', metrics=['accuracy'])
encoder.summary()

batch_size = 64
epochs = 1000

x_train, x_val, y_train, y_val = train_test_split(x, y, test_size=0.2, random_state=42)
autoencoder.fit(x_train, y_train,
                epochs=epochs,
                batch_size=batch_size,
                shuffle=True)
collection.insert_one({'model': 'SIMPLERNN', 'accuracy': autoencoder.evaluate(x_val, y_val)})

# do a k-fold cross validation
# do a grid search for hyperparameters
